name: Vercel Preview Deployment
env:
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
    push:
        branches-ignore:
            - main
jobs:
    Deploy-Preview:
        runs-on: ubuntu-latest
        outputs:
            deployment-url: ${{ steps.preview.outputs.DEPLOYMENT_URL }}
        steps:
            - name: Checkout
              uses: actions/checkout@v3

            - name: Install jq
              run: sudo apt-get install jq

            - name: Install Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 21

            - uses: pnpm/action-setup@v2
              name: Install pnpm
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - uses: actions/cache@v3
              name: Setup pnpm cache
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install Vercel CLI
              run: pnpm add -g vercel@latest
            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
            - name: Build Project Artifacts
              run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
            - name: Deploy Project Artifacts to Vercel
              id: preview
              run: |
                  vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
                  deploymentUrl=$(cat deployment-url.txt)
                  echo "Vercel Preview URL: $deploymentUrl"
                  echo "DEPLOYMENT_URL=$deploymentUrl" >> $GITHUB_OUTPUT
    Ntfy-Success:
        needs: Deploy-Preview
        runs-on: ubuntu-latest
        if: success()
        env:
            DEPLOYMENT_URL: ${{ needs.Deploy-Preview.outputs.deployment-url }}
        steps:
            - name: Send Notification
              run: |
                  curl -u ${{ secrets.NTFY_CRED }} \
                    -d "Your Portfolio Preview is all set and live! ðŸš€ðŸ’»" \
                    -H "Title: GitHub Baba" \
                    -H "Actions: view, Open Site, $DEPLOYMENT_URL; view, Open Github, ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
                    ${{ secrets.NTFY_URL }}
    Ntfy-Failure:
        needs: Deploy-Preview
        runs-on: ubuntu-latest
        if: failure()
        steps:
            - name: Send Notification
              run: |
                  curl -u ${{ secrets.NTFY_CRED }} \
                    -d "Your Portfolio Preview failed to build! ðŸš€ðŸ’»" \
                    -H "Title: GitHub Baba" \
                    -H "Actions: view, Open Github, ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
                    ${{ secrets.NTFY_URL }}
